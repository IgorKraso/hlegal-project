@use "./variables" as var;
// Media queries
@mixin devices($breakpoint) {
  @if $breakpoint==desktopHD-SD {
    @media only screen and(max-width:var.$desktopHD-SD) {
      @content;
    }
  }

  @if $breakpoint==desktopSD {
    @media only screen and(max-width:var.$desktopSD) {
      @content;
    }
  }
  @if $breakpoint==desktop-tablet {
    @media only screen and(max-width:var.$desktop-tablet) {
      @content;
    }
  }
  @if $breakpoint==tabletHD {
    @media only screen and(max-width:var.$tabletHD) {
      @content;
    }
  }
  @if $breakpoint==tablet-SHD {
    @media only screen and(max-width:var.$tabletSHD) {
      @content;
    }
  }
  @if $breakpoint==tabletXS-HD {
    @media only screen and(max-width:var.$tabletXS-HD) {
      @content;
    }
  }
  @if $breakpoint==tabletHD-SD {
    @media only screen and(max-width:var.$tabletHD-SD) {
      @content;
    }
  }

  @if $breakpoint==tabletSD {
    @media only screen and(max-width:var.$tabletSD) {
      @content;
    }
  }
  @if $breakpoint==tabletSSD {
    @media only screen and(max-width:var.$tabletSSD) {
      @content;
    }
  }
  @if $breakpoint==tablet-mobile {
    @media only screen and(max-width:var.$tablet-mobile) {
      @content;
    }
  }
  @if $breakpoint==mobileHD {
    @media only screen and(max-width:var.$mobileHD) {
      @content;
    }
  }

  @if $breakpoint==mobile {
    @media only screen and(max-width:var.$mobile) {
      @content;
    }
  }
}
// Info block dot
@mixin dot($color, $left) {
  content: "";
  position: absolute;
  top: 50%;
  left: $left;
  transform: translateY(-50%);
  display: block;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: $color;
}
// links
@mixin blue-link {
  position: relative;
  display: inline-block;
  font-size: 14px;
  line-height: 120%;
  font-weight: var.$fontWeightBold;
  text-transform: uppercase;
  color: var.$activeRegular;
  transition: all 0.3s ease;
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    transform: translateY(-50%) translateX(50%) rotate(225deg);
    display: inline-block;
    width: 8px;
    height: 8px;
    border-left: 2px solid var.$activeRegular;
    border-bottom: 2px solid var.$activeRegular;
    transition: all 0.3s ease;
  }
  &:hover {
    color: var.$accentColor;
    &::after {
      transform: translateY(-50%) translateX(50%) rotate(225deg);
      border-left: 2px solid var.$accentColor;
      border-bottom: 2px solid var.$accentColor;
    }
  }
}
// Title
@mixin red-title {
  font-size: 38px;
  line-height: 120%;
  background-image: var.$superRedText;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}
@mixin blue-btn {
  padding: 18px 30px;
  background-color: var.$activeRegular;
  box-shadow: 0px 0px 20px var.$activeRegularAlfa;
  border-radius: 12px;
  font-weight: var.$fontWeightBold;
  font-size: 16px;
  line-height: 125%;
  color: var.$colorWhite;

  transition: background-color 0.3s ease-in-out;
  &:hover {
    background-color: var.$activeHover;
  }
  &:active {
    background-color: var.$activeActive;
  }
}
